apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Values.Namespace.name }}
{{- include "charts.lables" $ | indent 2 }}
spec:
  replicas: 2
  selector:
{{- include "charts.matchLabels" $ | indent 4 }}
  template:
    metadata:
{{- include "charts.lables" $ | indent 6 }}
     #annotations:
       #prometheus.io/scrape: "true"
       #prometheus.io/port: "9113"
    spec:
      terminationGracePeriodSeconds: 300
      serviceAccountName: {{ .Release.Name }}-serviceaccount
      containers:
        - name: nginx-ingress-controller
          image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.29.0
          args:
            - /nginx-ingress-controller
            - --configmap=$(POD_NAMESPACE)/nginx-config
            - --election-id=ingress-controller-leader$(ARGS_SUFFIX)
            - --ingress-class=nginx
            #- --tcp-services-configmap=$(POD_NAMESPACE)/tcp-services$(ARGS_SUFFIX)
            #- --udp-services-configmap=$(POD_NAMESPACE)/udp-services$(ARGS_SUFFIX)
            - --publish-service=$(POD_NAMESPACE)/{{ .Release.Name }}$(ARGS_SUFFIX)
            - --annotations-prefix={{ .Values.ingress.annotation.prefix.name }}
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
            # www-data -> 101
            runAsUser: 101
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: ARGS_SUFFIX
              valueFrom:
                fieldRef:
                  fieldPath: metadata.annotations['ingress_name']
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          lifecycle:
            preStop:
              exec:
                command:
                  - /wait-shutdown